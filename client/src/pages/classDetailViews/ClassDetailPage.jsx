import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
// ‚úÖ S·ª≠ d·ª•ng getSubjectByIdApi ƒë·ªÉ l·∫•y chi ti·∫øt 
import { getSubjectByIdApi } from "../../util/api"; 
import "../../styles/ClassDetailView.css";
import { cilCalendar, cilChart, cilUser, cilList, cilBook, cilFolder, cilCheckCircle, cilClipboard, cilContact, cilBell, cilDescription } from "@coreui/icons";
import CIcon from "@coreui/icons-react";

import SubjectDetail from "./SubjectDetail";
import StudentList from "./StudentList";
import CustomCalendar from "./CustomCalendar";
import AttendanceStudent from "./AttendanceStudent";
import MaterialList from "./MaterialList";
import AssignmentList from "./AssignmentList";

const sideMenu = [
    { label: "Chi ti·∫øt m√¥n h·ªçc", icon: cilDescription },
    { label: "L·ªãch h·ªçc", icon: cilCalendar },
    { label: "Th·ªëng k√™", icon: cilChart },
    { label: "H·ªçc vi√™n", icon: cilUser },
    { label: "C√°c bu·ªïi h·ªçc", icon: cilList },
    { label: "B√†i t·∫≠p", icon: cilBook },
    { label: "T√†i li·ªáu", icon: cilFolder },
    { label: "ƒêi·ªÉm danh", icon: cilCheckCircle },
    { label: "B·∫£ng ƒëi·ªÉm", icon: cilClipboard },
    { label: "ƒêi·ªÉm danh gi√°o vi√™n", icon: cilUser },
    { label: "Ph·∫£n h·ªìi bu·ªïi h·ªçc", icon: cilContact },
    { label: "Th√¥ng b√°o", icon: cilBell }
];

const componentMap = {
    "Chi ti·∫øt m√¥n h·ªçc": SubjectDetail,
    "H·ªçc vi√™n": StudentList,
    "L·ªãch h·ªçc": (props) => <CustomCalendar subjectId={props.classData.id} />,
    "ƒêi·ªÉm danh": AttendanceStudent,
    "T√†i li·ªáu": MaterialList,
    "B√†i t·∫≠p": AssignmentList,

    // ... c√°c component kh√°c
};

export default function ClassDetailPage() {
    const { id } = useParams();
    const navigate = useNavigate();

    const [classData, setClassData] = useState(null);
    const [activeMenu, setActiveMenu] = useState("Chi ti·∫øt m√¥n h·ªçc");
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchClass = async () => {
            // ‚úÖ RESET tr·∫°ng th√°i khi ID thay ƒë·ªïi
            setLoading(true);
            setClassData(null); 
            
            try {
                // üöÄ G·ªåI API CHI TI·∫æT THEO ID T·ª™ URL
                const res = await getSubjectByIdApi(id); 

                if (res.success && res.data) {
                    setClassData(res.data);
                } else {
                    console.error(`Kh√¥ng t√¨m th·∫•y m√¥n h·ªçc c√≥ ID ${id} ho·∫∑c API th·∫•t b·∫°i.`);
                    // C√≥ th·ªÉ th√™m x·ª≠ l√Ω l·ªói nh∆∞ navigate("/admin/error/404")
                }
            } catch (err) {
                console.error("L·ªói fetch chi ti·∫øt l·ªõp:", err);
            } finally {
                setLoading(false);
            }
        };
        fetchClass();
    }, [id]);

    if (loading) return <p>ƒêang t·∫£i chi ti·∫øt m√¥n h·ªçc...</p>;
    // Tr∆∞·ªùng h·ª£p fetch xong nh∆∞ng kh√¥ng c√≥ d·ªØ li·ªáu (API tr·∫£ v·ªÅ 404/l·ªói)
    if (!classData) return <p>Kh√¥ng t√¨m th·∫•y m√¥n h·ªçc.</p>; 

    const ActiveComponent = componentMap[activeMenu];

    return (
        <div className="class-detail-layout">
            <div className="class-sub-sidebar">
                <button className="btn-back" onClick={() => navigate("/admin/classlist")}>
                    ‚Üê Tr·ªü l·∫°i
                </button>
                <ul>
                    {sideMenu.map((item) => (
                        <li
                            key={item.label}
                            className={activeMenu === item.label ? "active" : ""}
                            onClick={() => setActiveMenu(item.label)}
                            style={{ cursor: "pointer" }}
                        >
                            <CIcon icon={item.icon} className="sidebar-icon" />
                            {item.label}
                        </li>
                    ))}
                </ul>
            </div>

            <div className="class-detail-content">
                {/* Truy·ªÅn classData xu·ªëng c√°c component con */}
                {ActiveComponent ? <ActiveComponent classData={classData} /> : <p>Ch∆∞a c√≥ n·ªôi dung</p>}
            </div>
        </div>
    );
}